@model Online_Quiz_App.Models.CreateQuizViewModel

<style>
    body {
        background: linear-gradient(90deg, #0f2027, #203a43, #2c5364);
        color: #fff;
    }

    .quiz-form-container {
        background-color: #ffffff10;
        border-radius: 12px;
        padding: 40px;
        box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
        max-width: 900px;
        margin: auto;
    }

    .card {
        background-color: #ffffff15;
        color: #fff;
        border: none;
        box-shadow: 0 2px 10px rgba(0, 0, 0, 0.2);
    }

    label {
        font-weight: bold;
    }

    input.form-control {
        background-color: #fff;
        color: #000;
    }

    .btn {
        padding: 8px 20px;
        border-radius: 6px;
        font-weight: 500;
    }

    .btn-primary {
        background-color: #007bff;
        border: none;
    }

        .btn-primary:hover {
            background-color: #0056b3;
        }

    .btn-secondary {
        background-color: #6c757d;
        border: none;
    }

        .btn-secondary:hover {
            background-color: #5a6268;
        }
</style>

<div class="container py-5">
    <div class="quiz-form-container">
        <h2 class="mb-4 text-center">Create a New Quiz</h2>

        <form method="post" asp-action="Create" asp-controller="Quiz">
            <div class="mb-4">
                <label for="Title" class="form-label">Quiz Title</label>
                <input type="text" class="form-control" id="Title" name="Title" value="@Model.Title" required />
            </div>

            <div id="questions-container">
                @for (int i = 0; i < Model.Questions.Count; i++)
                {
                    <div class="card mb-4">
                        <div class="card-body">
                            <h5 class="card-title">Question @(i + 1)</h5>
                            <div class="mb-3">
                                <label class="form-label">Question Text</label>
                                <input type="text" class="form-control" name="Questions[@i].Text" value="@Model.Questions[i].Text" required />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Correct Answer</label>
                                <input type="text" class="form-control" name="Questions[@i].CorrectAnswer" value="@Model.Questions[i].CorrectAnswer" required />
                            </div>
                            <div class="mb-3">
                                <label class="form-label">Options</label>
                                @for (int j = 0; j < Model.Questions[i].Options.Count; j++)
                                {
                                    <input type="text" class="form-control mb-2" name="Questions[@i].Options[@j]" value="@Model.Questions[i].Options[j]" required />
                                }
                            </div>
                        </div>
                    </div>
                }
            </div>

            <div class="d-flex justify-content-between">
                <button type="button" class="btn btn-secondary" id="add-question">Add Question</button>
                <button type="submit" class="btn btn-primary">Create Quiz</button>
            </div>
        </form>
    </div>
</div>

<script>
    document.getElementById('add-question').addEventListener('click', function () {
        const container = document.getElementById('questions-container');
        const questionCount = container.children.length;

        const questionHtml = `
            <div class="card mb-4">
                <div class="card-body">
                    <h5 class="card-title">Question ${questionCount + 1}</h5>
                    <div class="mb-3">
                        <label class="form-label">Question Text</label>
                        <input type="text" class="form-control" name="Questions[${questionCount}].Text" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Correct Answer</label>
                        <input type="text" class="form-control" name="Questions[${questionCount}].CorrectAnswer" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Options</label>
                        <input type="text" class="form-control mb-2" name="Questions[${questionCount}].Options[0]" required />
                        <input type="text" class="form-control mb-2" name="Questions[${questionCount}].Options[1]" required />
                        <input type="text" class="form-control mb-2" name="Questions[${questionCount}].Options[2]" required />
                        <input type="text" class="form-control mb-2" name="Questions[${questionCount}].Options[3]" required />
                    </div>
                </div>
            </div>
        `;

        container.insertAdjacentHTML('beforeend', questionHtml);
    });
</script>
